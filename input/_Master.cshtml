<!DOCTYPE html>
<html>

    <!--
   ____                            __                        __  __  ______     
  /\  _`\                         /\ \__  __                /\ \/\ \/\__  _\    
  \ \ \L\ \     __     __      ___\ \ ,_\/\_\  __  __     __\ \ \ \ \/_/\ \/    
   \ \ ,  /   /'__`\ /'__`\   /'___\ \ \/\/\ \/\ \/\ \  /'__`\ \ \ \ \ \ \ \    
    \ \ \\ \ /\  __//\ \L\.\_/\ \__/\ \ \_\ \ \ \ \_/ |/\  __/\ \ \_\ \ \_\ \__ 
     \ \_\ \_\ \____\ \__/.\_\ \____\\ \__\\ \_\ \___/ \ \____\\ \_____\/\_____\
      \/_/\/ /\/____/\/__/\/_/\/____/ \/__/ \/_/\/__/   \/____/ \/_____/\/_____/
                                                                                                                                                                      
    We <3 the people who are involved in this project, and weâ€™d love
    to have you on board: https://reactiveui.net/contribute
    -->

    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
        <meta name="description" content="@Context.String(DocsKeys.Description)" />
        <meta name="keywords" content="reactiveui,functional,reactive,framework,mvvm,viewmodel,xamarin,ios,android,uwp">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="shortcut icon" href="@Context.GetLink("/assets/img/favicon.ico")" type="image/x-icon">
        <link rel="icon" href="@Context.GetLink("/assets/img/favicon.ico")" type="image/x-icon">
        <title>@Context.String(DocsKeys.Title, "Docs") - @ViewData[Keys.Title]</title>
        <link href="@Context.GetLink("/assets/css/highlight.css")" rel="stylesheet">
        <link href="@Context.GetLink("/assets/css/bootstrap/bootstrap.css")" rel="stylesheet" />
        <link href="@Context.GetLink("/assets/css/adminlte/AdminLTE.css")" rel="stylesheet" />
        <link href="@Context.GetLink("/assets/css/theme/theme.css")" rel="stylesheet" />
        <link href="@Context.GetLink("/assets/css/override.css")" rel="stylesheet" />
        <script src="@Context.GetLink("/assets/js/jquery-2.2.3.min.js")"></script>
        <script src="@Context.GetLink("/assets/js/bootstrap.min.js")"></script>        
        <script src="@Context.GetLink("/assets/js/app.min.js")"></script>         
        <script src="@Context.GetLink("/assets/js/highlight.pack.js")"></script>   
        <script src="@Context.GetLink("/assets/js/jquery.slimscroll.min.js")"></script>
        <script src="@Context.GetLink("/assets/js/jquery.sticky-kit.min.js")"></script>
        <script src="@Context.GetLink("/assets/js/mermaid.min.js")"></script>
        <script src="@Context.GetLink("/assets/js/svg-pan-zoom.min.js")"></script>
        <!--[if lt IE 9]>
        <script src="@Context.GetLink("/assets/js/html5shiv.min.js")"></script>
        <script src="@Context.GetLink("/assets/js/respond.min.js")"></script>
        <![endif]-->  

        @Html.Partial("_Head")
    </head>
    @{
        string layoutTopNav = Model.Bool(DocsKeys.NoSidebar, false) ? "layout-top-nav" : string.Empty;
        string noGutter = Model.Bool(DocsKeys.NoGutter, false) ? "no-gutter" : string.Empty;
    }
    <body class="hold-transition wyam layout-boxed @layoutTopNav @noGutter">    
        <div class="top-banner">The recording of the first ever ReactiveUI virtual conference is available on our <a href="https://www.youtube.com/c/ReactiveUI/featured">YouTube Channel</a>.</div>
        @{
            string withContainer = Model.Bool(DocsKeys.NoContainer, false) ? null : "with-container";
        }
        <div class="wrapper @withContainer">
            <!-- Header -->
            <header class="main-header">   

                @{
                    if (Model.Bool(DocsKeys.ShowInNavbar, true))
                    {
                        <text>
                            <a href="@Context.GetLink("/")" class="logo">
                                <div class="logo-lg">
                                    <img class="logo-image" src="@Context.GetLink("/assets/img/logo.png")" style="max-height: 60px" />
                                    <span class="logo-caption">ReactiveUI</span>
                                </div>
                            </a>   
                        </text>
                    }
                }
                     
                <nav class="navbar navbar-static-top" role="navigation">
                    <!-- Sidebar toggle button-->
                    @if(!Model.Bool("NoSidebar", false))
                    {
                        <a href="#" class="sidebar-toggle visible-xs-block" data-toggle="offcanvas" role="button">
                            <span class="sr-only">Toggle side menu</span>
                            <i class="fa fa-chevron-circle-right"></i>
                        </a>
                    }
                                        
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse">
                            <span class="sr-only">Toggle side menu</span>
                            <i class="fa fa-chevron-circle-down"></i>
                        </button>
                    </div>
            
                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse" id="navbar-collapse">
                        <ul class="nav navbar-nav navbar-right no-margin">
                            @Html.Partial("_Navbar") 
                        </ul>       
                    </div>
                    <!-- /.navbar-collapse -->
                
                </nav>
            </header>
            
            <!-- Left side column. contains the logo and sidebar -->
            <aside class="main-sidebar @(Model.Bool("NoSidebar", false) ? "hidden" : string.Empty)">
                <section class="infobar" data-spy="affix" data-offset-top="60" data-offset-bottom="200"> 
                    @RenderSection("Infobar", false)
                </section>
                <section class="sidebar">    
                    @Html.Partial("_SidebarHeader")                 
                    @RenderSection("Search", false)
                    <ul class="sidebar-menu">
                        @RenderSection("Sidebar", false)
                    </ul>
                    @Html.Partial("_SidebarFooter")        
                </section>                
            </aside>
            
            <!-- Content Wrapper. Contains page content -->
            <div class="content-wrapper">
                @RenderBody()                
            </div>           
            
            <!-- Footer -->
            <footer class="main-footer">
            </footer>
            
            @*
            <!-- Control Sidebar -->
            <aside class="control-sidebar control-sidebar-dark">
                
            </aside>
            <!-- Add the sidebar's background. This div must be placed
                immediately after the control sidebar -->
            <div class="control-sidebar-bg"></div>
            *@
        </div>
        <div class="wrapper bottom-wrapper">
            <footer class="bottom-footer">
                @Html.Partial("_Footer")
            </footer>
        </div>
        <a href="javascript:" id="return-to-top"><i class="fa fa-chevron-up"></i></a>
        @Html.Partial("_Bottom")
        @Html.Partial("_Scripts")
        <script>           
            // Close the sidebar if we select an anchor link
            $(".main-sidebar a[href^='#']:not('.expand')").click(function(){
                $(document.body).removeClass('sidebar-open');
            });
            
            $(document).ready(function() {
                mermaid.initialize(
                {
                    flowchart:
                    {
                        useMaxWidth: false
                    },
					startOnLoad: false,
					cloneCssStyles: false
                });     
                mermaid.init(undefined, ".mermaid");

                // Remove the max-width setting that Mermaid sets
                var mermaidSvg = $('.mermaid svg');
                mermaidSvg.addClass('img-responsive');
                mermaidSvg.css('max-width', '');

                // Make it scrollable
				var target = document.querySelector(".mermaid svg");
				if(target !== null)
				{
					var panZoom = window.panZoom = svgPanZoom(target, {
						zoomEnabled: true,
						controlIconsEnabled: true,
						fit: true,
						center: true,
                        maxZoom: 20,
                        zoomScaleSensitivity: 0.6
					});			                          

                    // Do the reset once right away to fit the diagram
                    panZoom.resize();
                    panZoom.fit();
                    panZoom.center();
                    
                    $(window).resize(function(){
                        panZoom.resize();
                        panZoom.fit();
                        panZoom.center();
                    });
		}
                
                $('pre code').each(function(i, block) {
                    hljs.highlightBlock(block);
                });  
            });

            hljs.initHighlightingOnLoad();

            // Back to top
            $(window).scroll(function() {
                if ($(this).scrollTop() >= 200) {        // If page is scrolled more than 50px
                    $('#return-to-top').fadeIn(1000);    // Fade in the arrow
                } else {
                    $('#return-to-top').fadeOut(1000);   // Else fade out the arrow
                }
            });
            $('#return-to-top').click(function() {      // When arrow is clicked
                $('body,html').animate({
                    scrollTop : 0                       // Scroll to top of body
                }, 500);
            });
        </script>
    </body>
</html>
